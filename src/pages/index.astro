---
import i18next, { t } from "i18next";

import {
  ThemeSwitchButtonComponent,
  ThemeSwitchButtonUnstyledWrapper,
} from "@components/ThemeSwitch";
import { LanguageSwitchButtonComponent } from "@components/LanguageSwitch";
import IconComponent from "@components/Icon";
import SpaceComponent from "@components/Space";
import TypographyComponent from "@components/Typography";
import ExperienceComponent from "@components/Experience";
import ButtonComponent from "@components/Button";
import DefaultLayout from "@layouts/Default.Layout.astro";

import "../styles/pages/index/styles.css";

import profileImage from "../assets/profile.jpg";
import LanguageSwitchButtonUnstyledWrapper from "@components/LanguageSwitch/LanguageSwitchButtonUnstyledWrapper.Component.astro";
import LanguageSwitchSelect from "@components/LanguageSwitch/LanguageSwitchSelect.Component.astro";

import { getWorkExperiences } from "src/experiences/work";
import { getEducationalExperiences } from "src/experiences/education";
---

<DefaultLayout>
  <input
    type="text"
    value="viniciusrodrigues.aro@gmail.com"
    id="hidden-email-input"
    hidden
  />

  <div class="two-circles-icon-wrapper" hidden>
    <IconComponent
      name="twoCirclesPattern"
      color="var(--gradient-stop-color-0)"
      color1="var(--gradient-stop-color-1)"
    />
  </div>

  <section id="intro" class="intro scrollable-section">
    <div class="section-content">
      <div class="profile-image-wrapper" hidden>
        <img class="profile-image" src={profileImage} alt="" />
      </div>

      <nav class="top-bar on-top-of-absolute-icon" hidden>
        <div class="nav-item">
          <ButtonComponent
            id="home-link"
            class="nav-link"
            variant="text"
            fontWeight="bold"
            title={t("intro.nav.homeButtonLabel")}
            redirectTo="#intro"
            redirectTarget="_self"
          />
        </div>
        <div class="nav-item">
          <ButtonComponent
            id="about-me-link"
            class="nav-link"
            variant="text"
            fontWeight="bold"
            title={t("intro.nav.aboutMeButtonLabel")}
            redirectTo="#about-me"
            redirectTarget="_self"
          />
        </div>
        <div class="nav-item">
          <ButtonComponent
            id="experience-link"
            class="nav-link"
            variant="text"
            fontWeight="bold"
            title={t("intro.nav.experienceButtonLabel")}
            redirectTo="#about-me"
            redirectTarget="_self"
          />
        </div>
        <div class="nav-item">
          <LanguageSwitchButtonComponent />
        </div>
        <div class="nav-item">
          <ThemeSwitchButtonComponent />
        </div>
      </nav>

      <div class="intro-hero-wrapper">
        <div class="intro-hero on-top-of-absolute-icon">
          <TypographyComponent class="title" variant="h1-sans"
            >VIN√çCIUS RODRIGUES DE ARO</TypographyComponent
          >

          <div class="subtitle-separator"></div>

          <TypographyComponent color="var(--foreground1)" variant="h2-sans"
            >{t("root:intro.hero.role")}</TypographyComponent
          >

          <div class="mobile-social-links-wrapper" hidden>
            <IconComponent
              size={32}
              name="linkedin"
              color="var(--foreground, black)"
            />
            <SpaceComponent direction="horizontal" size={24} />
            <IconComponent
              size={32}
              name="github"
              color="var(--foreground, black)"
            />
          </div>

          <div class="desktop-social-links-wrapper">
            <ButtonComponent
              redirectTo="https://www.linkedin.com/in/vinicius-rodrigues-aro/"
              id="linkedin-button"
              showIcon={true}
              iconName="linkedin"
              iconPosition="left"
              title="LinkedIn"
            />

            <SpaceComponent direction="vertical" size="2rem" />

            <ButtonComponent
              redirectTo="https://github.com/viniciusrodrigues1a/"
              id="github-button"
              showIcon={true}
              iconName="github"
              iconPosition="left"
              title="GitHub"
            />
          </div>
        </div>

        <div class="intro-hero-right-side">
          <div class="clock" hidden>
            <div class="clock-inner no-animation">
              <div class="clock-hour-0"></div>
              <div class="clock-hour-1"></div>
              <div class="clock-hour-2"></div>
              <div class="clock-hour-3"></div>
              <div class="clock-center-marker"></div>
              <div class="clock-minute-hand"></div>
              <div class="clock-hour-hand"></div>
            </div>
          </div>

          <div class="intro-hero-svg" hidden>
            <IconComponent
              name="person"
              color="var(--gradient-stop-color-0, lightblue)"
              color1="var(--gradient-stop-color-1, darkblue)"
            />
          </div>

          <div class="lamp-icon-wrapper" hidden>
            <IconComponent name="lamp" />

            <ThemeSwitchButtonUnstyledWrapper>
              <div class="lamp-theme-switch"></div>
            </ThemeSwitchButtonUnstyledWrapper>
          </div>
        </div>
      </div>

      <a href="#about-me" target="_self" class="chevrons-down-wrapper" hidden>
        <IconComponent
          size={64}
          name="chevronsDown"
          color="var(--foreground1)"
        />
      </a>
    </div>
  </section>

  <section id="about-me" class="section about-me scrollable-section">
    <div class="section-content">
      <div class="title-wrapper">
        <div class="title-typography">
          <div class="title-underline"></div>
          <TypographyComponent color="var(--foreground)" variant="h1-sans"
            >{t("aboutMe.sectionTitle")}</TypographyComponent
          >
        </div>
      </div>

      <div class="about-me-info">
        <img
          width="200px"
          height="228px"
          class="about-me-img"
          src={profileImage}
          alt=""
        />

        <div>
          <div class="about-me-description-wrapper">
            <TypographyComponent
              color="var(--foreground)"
              variant="body"
              textAlign="justify"
              >{t("aboutMe.description")}</TypographyComponent
            >
          </div>

          <div class="about-me-social-icons-wrapper">
            <a
              class="social-icon-anchor"
              href="https://www.linkedin.com/in/vinicius-rodrigues-aro/"
              target="_blank"
            >
              <IconComponent
                color="var(--foreground, black)"
                size={32}
                name="linkedin"
              />
            </a>

            <a
              class="social-icon-anchor"
              href="https://github.com/viniciusrodrigues1a/"
              target="_blank"
            >
              <IconComponent
                color="var(--foreground, black)"
                size={32}
                name="github"
              />
            </a>

            <div class="email-clipboard-button social-icon-anchor">
              <IconComponent
                color="var(--foreground, black)"
                size={32}
                name="mail"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section id="experience" class="section experience scrollable-section">
    <div class="section-content">
      <div class="title-wrapper">
        <div class="title-typography">
          <div class="title-underline"></div>
          <TypographyComponent color="var(--foreground)" variant="h1-sans"
            >{t("experience.sectionTitle")}</TypographyComponent
          >
        </div>
      </div>

      <div class="experience-content-container">
        <input
          class="experience-type-radio"
          type="radio"
          id="work"
          name="experience"
          value="work"
          checked
          hidden
        />
        <input
          class="experience-type-radio"
          type="radio"
          id="education"
          name="experience"
          value="education"
          hidden
        />

        <div class="experience-type-tabs" hidden>
          <label class="experience-type-radio-label" for="work"></label>
          <label class="experience-type-radio-label" for="education"></label>

          <div
            class="experience-type-button-container experience-type-indicator"
          >
            <TypographyComponent
              class="experience-type-button-text"
              variant="button">-</TypographyComponent
            >
          </div>
          <div class="experience-type-button-container">
            <TypographyComponent
              class="experience-type-button-text"
              variant="button"
              >{t("experience.workExperienceLabel")}</TypographyComponent
            >
          </div>
          <div class="experience-type-button-container">
            <TypographyComponent
              class="experience-type-button-text"
              variant="button"
              >{t("experience.educationExperienceLabel")}</TypographyComponent
            >
          </div>
        </div>

        <div class="experience-work-content">
          {
            getWorkExperiences()?.map((e) => (
              <ExperienceComponent
                title={e.title}
                formattedDate={e.formattedDate}
                company={e.company}
                companyLink={e.companyLink}
                description={e.description}
              />
            ))
          }
        </div>

        <div class="experience-education-content" hidden>
          {
            getEducationalExperiences()?.map((e) => (
              <ExperienceComponent
                title={e.title}
                formattedDate={e.formattedDate}
                company={e.company}
                companyLink={e.companyLink}
                description={e.description}
              />
            ))
          }
        </div>
      </div>

      <a href="#intro" target="_self" class="chevrons-up-container">
        <div class="chevrons-up-icon-container" hidden>
          <div class="chevrons-up-icon-inner-container">
            <IconComponent
              name="chevronsDown"
              color="var(--foreground, black)"
            />
          </div>
        </div>

        <TypographyComponent
          class="chevrons-up-text"
          variant="button"
          textAlign="center"
          >{t("experience.goBackToTopButtonLabel")}</TypographyComponent
        >
      </a>
    </div>
  </section>

  <footer id="footer" class="section scrollable-section">
    <div class="footer-content-wrapper">
      <div class="footer-content">
        <TypographyComponent
          class="footer-title"
          variant="h1-serif"
          color="var(--foreground)"
          >{t("footer.letsWorkTogetherTitle")}</TypographyComponent
        >

        <ButtonComponent
          id="email-footer-button"
          variant="text"
          title="viniciusrodrigues.aro@gmail.com"
          fontWeight="normal"
          color="var(--foreground2)"
          class="email-clipboard-button footer-button"
        />
      </div>

      <div class="footer-content">
        <TypographyComponent
          class="footer-title"
          variant="h1-serif"
          color="var(--foreground)"
          >{t("footer.checkOutMyWorkTitle")}</TypographyComponent
        >
        <ButtonComponent
          redirectTo="https://www.linkedin.com/in/vinicius-rodrigues-aro/"
          id="linkedin-footer-button"
          variant="text"
          title="LinkedIn"
          iconName="externalLink"
          iconPosition="right"
          fontWeight="normal"
          color="var(--foreground2, black)"
          iconSize={20}
          showIcon
          class="footer-button"
        />
        <ButtonComponent
          redirectTo="https://github.com/viniciusrodrigues1a/"
          id="github-footer-button"
          class="footer-button-mt"
          variant="text"
          title="GitHub"
          iconName="externalLink"
          iconPosition="right"
          fontWeight="normal"
          color="var(--foreground2, black)"
          iconSize={20}
          showIcon
          class="footer-button"
        />
      </div>

      <div class="footer-content">
        <TypographyComponent
          class="footer-title"
          variant="h1-serif"
          color="var(--foreground)"
          >{t("footer.preferencesTitle")}</TypographyComponent
        >
        <div class="change-language-container">
          <ButtonComponent
            id="change-language-button"
            variant="text"
            stopPropagation
            hidden
          >
            <LanguageSwitchButtonUnstyledWrapper>
              <div class="button-slot-wrapper">
                <IconComponent
                  name="globe"
                  size={20}
                  color="var(--foreground2, black)"
                />
                <TypographyComponent
                  variant="button"
                  color="var(--foreground2, black)"
                >
                  {t("footer.changeLanguageButtonLabel")}
                </TypographyComponent>
              </div>
            </LanguageSwitchButtonUnstyledWrapper>
          </ButtonComponent>
          <LanguageSwitchSelect
            buttonId0="language-switch-ptBR-1"
            buttonId1="language-switch-en-1"
          />
        </div>

        <ButtonComponent
          id="change-theme-button"
          class="footer-button-mt"
          variant="text"
          fontWeight="normal"
          hidden
        >
          <ThemeSwitchButtonUnstyledWrapper>
            <div class="button-slot-wrapper">
              <IconComponent
                name="moon"
                size={20}
                color="var(--foreground2, black)"
              />
              <TypographyComponent
                variant="button"
                color="var(--foreground2, black)"
              >
                {t("footer.changeThemeButtonLabel")}
              </TypographyComponent>
            </div>
          </ThemeSwitchButtonUnstyledWrapper>
        </ButtonComponent>
      </div>

      <div class="clipboard-toast-container clipboard-hidden">
        <TypographyComponent
          variant="body"
          color="var(--background)"
          textAlign="center">{t("clipboardMessage")}</TypographyComponent
        >
      </div>

      <div class="bottom-bar-wrapper" hidden>
        <div class="bottom-bar">
          <a class="bottom-bar-anchor" href="#intro">
            <div class="bottom-bar-item">
              <IconComponent size={26} name="home" color="var(--foreground1)" />
              <TypographyComponent
                color="var(--foreground1)"
                fontSize={14}
                fontFamily="var(--sans-serif-font-family)"
                >{t("intro.nav.homeButtonLabel")}</TypographyComponent
              >
            </div>
          </a>

          <a class="bottom-bar-anchor" href="#about-me">
            <div class="bottom-bar-item">
              <IconComponent size={26} name="user" color="var(--foreground1)" />
              <TypographyComponent
                color="var(--foreground1)"
                fontSize={14}
                fontFamily="var(--sans-serif-font-family)"
                >{t("intro.nav.aboutMeButtonLabel")}</TypographyComponent
              >
            </div>
          </a>

          <a class="bottom-bar-anchor" href="#experience">
            <div class="bottom-bar-item">
              <IconComponent
                size={26}
                name="briefcase"
                color="var(--foreground1)"
              />
              <TypographyComponent
                color="var(--foreground1)"
                fontSize={14}
                fontFamily="var(--sans-serif-font-family)"
                >{t("intro.nav.experienceButtonLabel")}</TypographyComponent
              >
            </div>
          </a>

          <a class="bottom-bar-anchor" href="#footer">
            <div class="bottom-bar-item">
              <IconComponent
                size={26}
                name="archive"
                color="var(--foreground1)"
              />
              <TypographyComponent
                color="var(--foreground1)"
                fontSize={14}
                fontFamily="var(--sans-serif-font-family)"
                >{t("intro.nav.contactButtonLabel")}</TypographyComponent
              >
            </div>
          </a>
        </div>
      </div>
    </div>
  </footer>
</DefaultLayout>

<script>
  function showToast() {
    const toast = document.querySelector(".clipboard-toast-container");

    if (toast && toast.classList.contains("clipboard-hidden")) {
      toast?.classList.remove("clipboard-hidden");

      setTimeout(() => {
        toast?.classList.add("clipboard-hidden");
      }, 1000);
    }
  }

  function copyEmailToClipboard() {
    const textToCopy = document.getElementById("hidden-email-input") as
      | HTMLInputElement
      | undefined;

    if (textToCopy) {
      textToCopy.select();
      textToCopy.setSelectionRange(0, 99999);

      navigator.clipboard.writeText(textToCopy.value);

      showToast();
    }
  }

  const emailButtons = document.querySelectorAll(".email-clipboard-button");
  emailButtons.forEach((btn) => {
    btn.addEventListener("click", copyEmailToClipboard);
  });
</script>

<script>
  function interpolate(
    inputRange: number[],
    outputRange: number[],
    value: number
  ) {
    const [x1, x2] = inputRange;
    const [y1, y2] = outputRange;

    // Clamp the value within the input range
    const clampedValue = Math.max(x1, Math.min(x2, value));

    // Perform linear interpolation
    const interpolatedValue =
      y1 + ((clampedValue - x1) * (y2 - y1)) / (x2 - x1);

    return interpolatedValue;
  }

  function interpolateTranslationByScroll() {
    const halfViewport = window.innerHeight / 2;

    const lowerTranslateBound = 0;
    const upperTranslateBound = 150;

    return interpolate(
      [0, halfViewport],
      [lowerTranslateBound, upperTranslateBound],
      window.scrollY
    );
  }

  function animateElement(
    element: HTMLElement | null,
    elementInner: HTMLElement | null
  ) {
    if (!element || !elementInner) {
      return;
    }

    elementInner.classList.remove("no-animation");

    const translateByPixelAmount = -interpolateTranslationByScroll();
    element.style.transform = `translateY(${translateByPixelAmount}px)`;
  }

  function removeAnimationForElement(
    element: HTMLElement | null,
    elementInner: HTMLElement | null
  ) {
    if (!element || !elementInner) {
      return;
    }

    elementInner.classList.add("no-animation");
    element.style.transform = "translateY(0px)";
  }

  const flower = document.getElementById("flower");
  const flowerInner = document.getElementById("flower-inner");
  const thumbsUp = document.getElementById("thumbs-up");
  const thumbsUpInner = document.getElementById("thumbs-up-inner");
  const clock = document.querySelector(".clock") as HTMLElement | null;
  const clockInner = document.querySelector(
    ".clock-inner"
  ) as HTMLElement | null;

  function handleScroll() {
    const threshold = 50;
    if (window.scrollY > threshold) {
      animateElement(flower, flowerInner);
      animateElement(thumbsUp, thumbsUpInner);
      animateElement(clock, clockInner);
    } else {
      removeAnimationForElement(flower, flowerInner);
      removeAnimationForElement(thumbsUp, thumbsUpInner);
      removeAnimationForElement(clock, clockInner);
    }
  }

  window.addEventListener("scroll", handleScroll);
</script>
